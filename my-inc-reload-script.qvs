///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;($#,##0.00)';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';

//Set filepath for new QVD file
SET vQVDpath = 'C:\Users\lonmg19\Documents\Qlik\';

//Set name for QVD file, this is also the name of the source table used in load/select script
SET vQVDname = 'Invoice';

//This isn't used??
SET vKeyField = [Order ID];

//Set the field used to identify if a change was made to the source data
SET vUpdateField = Date;

//Connect to source data
OLEDB CONNECT32 TO [Provider=Microsoft.Jet.OLEDB.4.0;User ID=Admin;Data Source=C:\Users\lonmg19\Documents\Qlik\xtreme.mdb;Mode=Share Deny None;Extended Properties="";Jet OLEDB:System database="";Jet OLEDB:Registry Path="";Jet OLEDB:Database Password="";Jet OLEDB:Engine Type=5;Jet OLEDB:Database Locking Mode=1;Jet OLEDB:Global Partial Bulk Ops=2;Jet OLEDB:Global Bulk Transactions=1;Jet OLEDB:New Database Password="";Jet OLEDB:Create System Database=False;Jet OLEDB:Encrypt Database=False;Jet OLEDB:Don't Copy Locale on Compact=False;Jet OLEDB:Compact Without Replica Repair=False;Jet OLEDB:SFP=False];
///$tab Full Reload
// 1. Check if qvd exists 

//Check the byte length (size) of the produced QVD file
LET vFileLen = FileSize('$(vQVDpath)$(vQVDname).qvd');

// write the QVD size to the script execution window
TRACE >> QVD Size: $(vFileLen) bytes;

// 2. If QVD doesn't exist then perform a full reload

//Check if file exists. If length of the filesize is zero, file does not exist.
IF LEN('$(vFileLen)') = 0 THEN

//Inform script execution window that full reload is taking place.
TRACE No QVD found at '$(vQVDpath)', commencing full reload...;

//Select * from source data. QVDname specifies both the source table and the name of the new table in Qlikview.
$(vQVDname):
SQL SELECT *
FROM $(vQVDname);

//capture the number of rows in the fully reloaded table in a variable
let vRows = NoOfRows('$(vQVDname)');

// 3. Max Date field value into a QVD for the future reload

//Create table with two fields, 
//1. Max record number for the given update field (field used to determine if a change was made to DB)
//2. Generate a number of records where the number is the distinct count of Date values.
NewKey:
load
    NUM#(MAX(FieldValue('$(vUpdateField)', RecNo()))) as Key
	AutoGenerate NUM#(FieldValueCount('$(vUpdateField)'))
;

let vNewKey = peek('Key', 0, 'NewKey')
;

let vKeyQVD = 'MaxKey'
;

$(vKeyQVD):
load
    '$(vNewKey)' as MaxKey,
    '$(vRows)'   as [# of Rows Inserted],
    date(now())  as [Reload DateTime]
AutoGenerate(1)   
;

STORE  $(vKeyQVD)  into $(vQVDpath)$(vKeyQVD).qvd(qvd)
;

//drop Table NewKey
//;
    
// 4. Store table data into QVD

RENAME Field 'Order ID' to %Key_OrderID
;

store $(vQVDname)  into $(vQVDpath)$(vQVDname).qvd(qvd)
;

drop table $(vQVDname)
;

//5. Reset variables

LET vNewKey = null();
LET vMaxKey = Null();
LET vRows   = null();

exit SCRIPT
;

///$tab Incremental Reload
// 1. if QVD exists then perform incremental reload

ELSEIF len('$(vFileLen)') > 0 then

TRACE 'Incremental reload begins...'
;

// 2. Extract Primary Key from the prior reload (stored in a qvd) for the WHERE clause

set vKeyQVD = 'MaxKey'
;

$(vKeyQVD):
load
   date(MaxKey) as MaxKey
from 
$(vQVDpath)$(vKeyQVD).qvd(qvd)
;

let vMaxKey = Peek('MaxKey')
;

trace '>>> Last Max Key value stored:  ' & $(vMaxKey)
;

drop table $(vKeyQVD)
;

// 3. Perform incremental reload

$(vQVDname):
SQL SELECT *
FROM $(vQVDname)
where $(vUpdateField) > #$(vMaxKey)#
;

let vRows = NoOfRows('$(vQVDname)')
;

trace 'Total Rows:' $(vRows)
;

NewKey:
load
    num#(max(FieldValue('$(vUpdateField)', RecNo()))) as Key
AutoGenerate num#(FieldValueCount('$(vUpdateField)'))
;


// 4. Exit gracefully if no new records found

IF $(vRows) = 0 THEN
  
  EXIT SCRIPT;
  
ELSE

// 5. Concatenate new records with records from the existing QVD

RENAME Field 'Order ID' to %Key_OrderID
;

Concatenate($(vQVDname))
LOAD
   *
From
$(vQVDpath)$(vQVDname).qvd(qvd)
Where not Exists(%Key_OrderID)
;

// 6. Store this table data into QVD

trace 'Storing table data into QVD';

store $(vQVDname)  into $(vQVDpath)$(vQVDname).qvd(qvd)
;

// 7. Store max Primary Key ID for the future incremental reload (QVD)

let vNewKey = peek('Key', 0, 'NewKey')
;


let vKeyQVD = 'MaxKey'
;

$(vKeyQVD):
load
    '$(vNewKey)' as MaxKey,
    '$(vRows)'   as [# of Rows Inserted],
    date(now())  as [Reload DateTime]
AutoGenerate(1)   
;

DROP Table NewKey
;

STORE  $(vKeyQVD)  into $(vQVDpath)$(vKeyQVD).qvd(qvd)
;

drop table $(vQVDname)
;
///$tab Cleanup
